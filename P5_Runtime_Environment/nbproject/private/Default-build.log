g++ -Wall -std=c++11 -g -c AVM.cpp 
g++ -Wall -std=c++11 -g -c AVM_Table.cpp
g++ -Wall -std=c++11 -g -c AVM_MemCell.cpp
g++ -Wall -std=c++11 -g -c error_handler.cpp
error_handler.cpp: In function ‘void error(ErrorType, size_t, const char*, ...)’:
error_handler.cpp:29:48: warning: format ‘%u’ expects argument of type ‘unsigned int’, but argument 4 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
  fprintf(stderr, BON "%s:%u:" BOFF, fname, line);
                                                ^
g++ -Wall -std=c++11 -g -c VMarg.cpp
g++ -Wall -std=c++11 -g -c instruction.cpp	
g++ -Wall -std=c++11 -g -c execute_arithmetic.cpp
g++ -Wall -std=c++11 -g -c execute_jumps.cpp
g++ -Wall -std=c++11 -g -c execute_functions.cpp
g++ -Wall -std=c++11 -g -c execute_nop.cpp
g++ -Wall -std=c++11 -g -c execute_assign.cpp
g++ -Wall -std=c++11 -g -c execute_tables.cpp
g++ -Wall -std=c++11 -g -c AVM_libfuncs.cpp
g++ -Wall -std=c++11 -g AVM.o AVM_Table.o AVM_MemCell.o error_handler.o instruction.o VMarg.o AVM_main.cpp execute_arithmetic.o execute_jumps.o execute_functions.o execute_nop.o execute_tables.o execute_assign.o AVM_libfuncs.o -o avm.out 
